import pandas as pd 
import numpy as np 
from breeze_connect import BreezeConnect
import backtrader as bt
from datetime import datetime
import backtrader.analyzers as btanalyzers
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')

file = open("config.txt", "r")
keys = file.read().split(",")

key_api = keys[0]
key_secret = keys[1]
key_session = keys[2]


breeze = BreezeConnect(api_key=key_api)
breeze.generate_session(api_secret=key_secret, session_token=key_session)

class RsiEmaStrategy(bt.Strategy):
    params = (
        ('rsi_period', 14),  # Default RSI period
        ('ema_short', 12),   # Short-term EMA
        ('ema_long', 26),    # Long-term EMA
        ('rsi_overbought', 70),  # RSI overbought level
        ('rsi_oversold', 30),    # RSI oversold level
    )
    
    def __init__(self):
        # Define indicators
        self.rsi = bt.indicators.RSI_Safe(self.data.close, period=self.params.rsi_period)
        self.ema_short = bt.indicators.EMA(self.data.close, period=self.params.ema_short)
        self.ema_long = bt.indicators.EMA(self.data.close, period=self.params.ema_long)

    def next(self):
        if not self.position:
            # Buy conditions
            if self.rsi < self.params.rsi_oversold and self.ema_short > self.ema_long:
                self.buy()
        else:
            # Sell conditions
            if self.rsi > self.params.rsi_overbought or self.ema_short < self.ema_long:
                self.sell()


class CustomPandsData(bt.feeds.PandasData):
    params = (('datetime', 'datetime'),
            ('open', 'open'),
            ('high', 'high'),
            ('low', 'low'),
            ('close', 'close'),
            ('volume', 'volume')
            )

def datetime_to_iso(dt):
    return dt.strftime('%Y-%m-%dT%H:%M:%S') + '.000Z'

def datetime_converter(dt_string):
    return pd.to_datetime(dt_string)


if __name__ == "__main__":
    current_time = datetime.now()
    to_date = datetime_to_iso(current_time)

    data_df = breeze.get_historical_data_v2(interval="5minute",  
                                            from_date="2023-08-15T07:00:00.000Z",
                                            to_date=to_date,
                                            stock_code="ITC",
                                            exchange_code="NSE",
                                            product_type="cash")["Success"]

    data_df = pd.DataFrame(data_df)
    data_df["datetime"] = data_df["datetime"].apply(datetime_converter)

    cerebro = bt.Cerebro()
    cerebro.addstrategy(RsiEmaStrategy)

    data_feed = CustomPandsData(dataname=data_df)
    cerebro.adddata(data_feed)

    #Set up Broker Account
    cerebro.broker = bt.brokers.BackBroker()
    cerebro.broker.set_cash(1000000)

    #Run the Backtest
    cerebro.run()
    cerebro.plot()


